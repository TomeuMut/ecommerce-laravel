{
    "openapi": "3.0.0",
    "info": {
        "title": "Ecommerce Laravel API",
        "description": "API Docs for Ecommerce Laravel",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api",
            "description": "LocalHost"
        }
    ],
    "paths": {
        "/categories": {
            "get": {
                "summary": "List all categories",
                "description": "Retrieve a list of all categories",
                "operationId": "3dc1739ca2bc4527802b0e7c061b36fc",
                "responses": {
                    "200": {
                        "description": "List of categories"
                    }
                }
            },
            "post": {
                "summary": "Create a new category",
                "description": "Add a new category",
                "operationId": "d48a458b4a6e4fc2e9c50a2e7294e52d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "price",
                                    "stock",
                                    "category_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Electronics"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Category for electronic products",
                                        "nullable": true
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 1000
                                    },
                                    "stock": {
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "https://example.com/images/category.jpg",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "summary": "Get a specific category",
                "description": "Retrieve details of a category by ID",
                "operationId": "5cc175bd1065ea338e65ae4297a394d0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category details"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            },
            "put": {
                "summary": "Update a category",
                "description": "Update an existing category in the database",
                "operationId": "9753f0b68dff9e847003903099280076",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category to update",
                        "required": true
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Electronics",
                                        "nullable": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated category description",
                                        "nullable": true
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 1200,
                                        "nullable": true
                                    },
                                    "stock": {
                                        "type": "integer",
                                        "example": 50,
                                        "nullable": true
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 2,
                                        "nullable": true
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "https://example.com/images/updated-category.jpg",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully"
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "summary": "Delete a category",
                "description": "Remove a category from the database",
                "operationId": "bb77efc83d7a5d399d6d8faf9167a471",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category to delete",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category removed."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "summary": "List orders",
                "description": "Retrieve all orders",
                "operationId": "a1d37fa6409b3cc2c4e5af6a9e70c739",
                "responses": {
                    "200": {
                        "description": "List of orders"
                    }
                }
            },
            "post": {
                "summary": "Create a order",
                "description": "Store a order with items",
                "operationId": "7e8bde93d484a12095ed134b1c99e8db",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "items"
                                ],
                                "properties": {
                                    "user_id": {
                                        "description": "ID of the user placing the order",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "items": {
                                        "description": "List of items in the order",
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "product_id",
                                                "quantity"
                                            ],
                                            "properties": {
                                                "product_id": {
                                                    "description": "ID of the product",
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "quantity": {
                                                    "description": "Quantity of the product",
                                                    "type": "integer",
                                                    "example": 3
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/orders/{id}": {
            "get": {
                "summary": "Get a specific order",
                "description": "Retrieve details of a specific order by ID",
                "operationId": "13d8f198ad57c13b09f4d158a4a24141",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the order",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order details"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            }
        },
        "/orders/{id}/cancel": {
            "put": {
                "summary": "Cancel an order",
                "description": "Change the status of an order to 'canceled'",
                "operationId": "c2aa3f7d057235f4521435d4354cf290",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the order to cancel",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order canceled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order Canceled"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            }
        },
        "/orders/{id}/status": {
            "get": {
                "summary": "Get the status of an order",
                "description": "Retrieve the current status of a specific order",
                "operationId": "2ae0442eb18ed38cc06b2143cf718c7e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the order",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order status retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "pending"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            }
        },
        "/products": {
            "get": {
                "summary": "List products",
                "description": "Get all products in db",
                "operationId": "e8dee54b09adbe3622e56a4f4f19ecb0",
                "responses": {
                    "200": {
                        "description": "List products"
                    }
                }
            },
            "post": {
                "summary": "Create a product",
                "description": "Create a new product with validate fields",
                "operationId": "5d7ee765feb2052f10363a3d121ebd5e",
                "requestBody": {
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Product create successfully"
                    }
                }
            }
        },
        "/products/{id}": {
            "put": {
                "summary": "Update a product",
                "description": "Update an existing product in the database",
                "operationId": "1b73c420e0cf9fb1cb88dcf445b9428b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Update product with id of product to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "nullable": true
                                    },
                                    "stock": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "image": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully"
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "summary": "Delete a product",
                "description": "Remove a product",
                "operationId": "4618152b49c17cc0c19dfed9ba73aa46",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product removed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product removed successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            }
        },
        "/products/random": {
            "get": {
                "summary": "Get a random product",
                "description": "Retrieve a random product",
                "operationId": "a87b1799347a9eb4302bad30726ed4a8",
                "responses": {
                    "200": {
                        "description": "Random product retrieved successfully"
                    }
                }
            }
        }
    }
}